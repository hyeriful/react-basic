{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","props","useState","movies","setMovies","isLoading","setIsLoading","getMovies","a","axios","get","data","useEffect","movie","id","medium_cover_image","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAoCeA,MAhCf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,yBAAKC,UAAU,SACb,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACXD,EAAOI,KAAI,SACVC,EACAC,GAFU,OAIV,wBAAIC,IAAKD,EAAOL,UAAU,iBACvBI,OAIP,uBAAGJ,UAAU,iBAAiBH,EAAQU,MAAM,EAAG,KAA/C,U,MCiCOC,MAjDf,SAAaC,GAAQ,IAAD,EACUC,mBAAS,IADnB,mBACXC,EADW,KACHC,EADG,OAEgBF,oBAAS,GAFzB,mBAEXG,EAFW,KAEAC,EAFA,KAIZC,EAAS,uCAAG,8BAAAC,EAAA,sEAKNC,IAAMC,IACd,4DANc,gBAGJP,EAHI,EAEdQ,KACEA,KAAQR,OAMZC,EAAUD,GACVG,GAAa,GAVG,2CAAH,qDAiBf,OAJAM,qBAAU,WACRL,MACC,IAGD,6BAASf,UAAU,aAChBa,EACC,yBAAKb,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZW,EAAOR,KAAI,SAACkB,GAEX,OACE,kBAAC,EAAD,CACEf,IAAKe,EAAMC,GACXA,GAAID,EAAMC,GACV3B,KAAM0B,EAAM1B,KACZC,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,QACfC,OAAQuB,EAAME,mBACdxB,OAAQsB,EAAMtB,eCrC9ByB,IAASC,OAEP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.30ac6fce.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({ year, title, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <img src={poster} alt={title} title={title} />\n      <div className=\"movie__data\">\n        <h3 className=\"movie__title\">{title}</h3>\n        <h5 className=\"movie__year\">{year}</h5>\n        <ul className=\"movie__genres\">\n          {genres.map((\n            genre,\n            index //map에 있는 각각의 item은 key가 필요함\n          ) => (\n            <li key={index} className=\"genres__genre\">\n              {genre}\n            </li>\n          ))}\n        </ul>\n        <p className=\"move__summary\">{summary.slice(0, 180)}...</p>\n      </div>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nfunction App(props) {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    ); // yts.lt/api#list+movies\n    // console.log(movies);\n    setMovies(movies);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  return (\n    <section className=\"container\">\n      {isLoading ? (\n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div>\n      ) : (\n        <div className=\"movies\">\n          {movies.map((movie) => {\n            // console.log(movie);\n            return (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            );\n          })}\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default App;\n","import React from \"react\"; //component를 작성할 때마다 해주어야 함\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//component는 html를 반환하는 함수\n\n// react application은 한 번에 하나의 component만 redering할 수 있다\nReactDOM.render(\n  //React.StriceMode 문제가 발생하면, 발생된 에러메세지를 바로 출력하는 모드\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}